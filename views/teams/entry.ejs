<% layout('layouts/boilerplate') %>

<div class="container min-vh-100 d-flex justify-content-center align-items-center">
    <div class="card shadow card-bg w-100" style="max-width: 600px;">
        <div class="card-body card-bg">
            <h5 class="card-title text-center mb-3">Team Options</h5>
            <form id="teamForm" action="/team/top-stadiums" method="POST" class="needs-validation" novalidate>
                <div class="mb-3">
                    <label class="form-label mb-1" for="teamAction">Choose an Option</label>
                    <select class="form-select" id="teamAction" name="teamAction" required>
                        <option value="" disabled selected>Select Option</option>
                        <option value="topStadiums">Top Stadiums by Number of Teams Hosted</option>
                        <option value="insertTeamWins">Insert Team Wins</option>
                        <option value="totalTeamSalary">Total Team Salary</option>
                        <option value="dollarsPerWin">Team Dollars Spent Per Win</option>
                        <option value="playersOnTeam">Players on Team for Year</option>
                    </select>
                </div>
                <div id="dynamicTeamInputs"></div>
                <div class="d-grid mt-3">
                    <button class="btn btn-success">Submit</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
const dynamicTeamInputs = document.getElementById('dynamicTeamInputs');
const teamAction = document.getElementById('teamAction');
const teamForm = document.getElementById('teamForm');

teamAction.addEventListener('change', function() {
    dynamicTeamInputs.innerHTML = '';
    if (this.value === 'topStadiums') {
        teamForm.action = '/team/top-stadiums';
        dynamicTeamInputs.innerHTML = `
            <div class="mb-3">
                <label class="form-label mb-1" for="numStadiums">Number of Stadiums to Show</label>
                <input class="form-control" type="number" id="numStadiums" name="numStadiums" min="1" required>
            </div>
        `;
    } else if (this.value === 'insertTeamWins') {
        teamForm.action = '/team/insert-team-wins';
        dynamicTeamInputs.innerHTML = `
            <div class="mb-2">
                <label class="form-label mb-1" for="p_team_id">Team ID</label>
                <input class="form-control" type="text" id="p_team_id" name="p_team_id" required>
            </div>
            <div class="mb-2">
                <label class="form-label mb-1" for="p_year">Year</label>
                <input class="form-control" type="number" id="p_year" name="p_year" required>
            </div>
            <div class="mb-2">
                <label class="form-label mb-1" for="p_g">Games Played</label>
                <input class="form-control" type="number" id="p_g" name="p_g" required>
            </div>
            <div class="mb-2">
                <label class="form-label mb-1" for="p_wins">Wins</label>
                <input class="form-control" type="number" id="p_wins" name="p_wins" required>
            </div>
            <div class="mb-2">
                <label class="form-label mb-1" for="p_losses">Losses</label>
                <input class="form-control" type="number" id="p_losses" name="p_losses" required>
            </div>
            <div class="mb-2">
                <label class="form-label mb-1" for="p_div_win">Division Win?</label>
                <select class="form-select" id="p_div_win" name="p_div_win" required>
                    <option value="1">Yes</option>
                    <option value="0">No</option>
                </select>
            </div>
            <div class="mb-2">
                <label class="form-label mb-1" for="p_wc_win">Wildcard Win?</label>
                <select class="form-select" id="p_wc_win" name="p_wc_win" required>
                    <option value="1">Yes</option>
                    <option value="0">No</option>
                </select>
            </div>
            <div class="mb-2">
                <label class="form-label mb-1" for="p_lg_win">League Win?</label>
                <select class="form-select" id="p_lg_win" name="p_lg_win" required>
                    <option value="1">Yes</option>
                    <option value="0">No</option>
                </select>
            </div>
            <div class="mb-2">
                <label class="form-label mb-1" for="p_ws_win">World Series Win?</label>
                <select class="form-select" id="p_ws_win" name="p_ws_win" required>
                    <option value="1">Yes</option>
                    <option value="0">No</option>
                </select>
            </div>
            <div class="mb-2">
                <label class="form-label mb-1" for="p_name">Team Name</label>
                <input class="form-control" type="text" id="p_name" name="p_name" required>
            </div>
            <div class="mb-2">
                <label class="form-label mb-1" for="p_attendance">Attendance</label>
                <input class="form-control" type="number" id="p_attendance" name="p_attendance" required>
            </div>
        `;
    } else if (this.value === 'totalTeamSalary') {
        teamForm.action = '/team/total-team-salary';
        dynamicTeamInputs.innerHTML = `
            <div class="mb-2">
                <label class="form-label mb-1" for="team_id">Team ID</label>
                <input class="form-control" type="text" id="team_id" name="team_id" required>
            </div>
        `;
    } else if (this.value === 'dollarsPerWin') {
        teamForm.action = '/team/dollars-per-win';
        dynamicTeamInputs.innerHTML = `
            <div class="mb-2">
                <label class="form-label mb-1" for="team_id">Team ID</label>
                <input class="form-control" type="text" id="team_id" name="team_id" required>
            </div>
        `;
    } else if (this.value === 'playersOnTeam') {
        teamForm.action = '/team/players-on-team';
        dynamicTeamInputs.innerHTML = `
            <div class="mb-3">
                <label class="form-label mb-1" for="teamName">Team Name</label>
                <div class="position-relative">
                    <input class="form-control" type="text" id="teamName" name="teamName" autocomplete="off" placeholder="Enter team name" required>
                    <input type="hidden" name="teamId" id="teamId">
                    <div id="teamSuggestions" class="dropdown-menu w-100" style="max-height: 200px; overflow-y: auto;"></div>
                </div>
            </div>
            <div class="mb-3">
                <label class="form-label mb-1" for="year">Year</label>
                <input class="form-control" type="number" id="year" name="year" min="1871" max="2023" required>
            </div>
        `;
        
        // Add team autocomplete functionality
        setTimeout(() => {
            const teamNameInput = document.getElementById('teamName');
            const teamSuggestionsDiv = document.getElementById('teamSuggestions');
            let teamDebounceTimeout;
            
            teamNameInput.addEventListener('input', async function() {
                clearTimeout(teamDebounceTimeout);
                const query = this.value;
                teamSuggestionsDiv.innerHTML = '';
                
                if (query.length < 2) {
                    teamSuggestionsDiv.classList.remove('show');
                    return;
                }
                
                teamDebounceTimeout = setTimeout(async () => {
                    try {
                        const res = await fetch(`/addPlayer/search/teams?q=${encodeURIComponent(query)}`);
                        const teams = await res.json();
                        teamSuggestionsDiv.innerHTML = '';
                        
                        if (teams.length > 0) {
                            teamSuggestionsDiv.classList.add('dropdown-menu', 'show');
                            teams.forEach(team => {
                                const option = document.createElement('button');
                                option.type = 'button';
                                option.className = 'dropdown-item';
                                option.textContent = team.name;
                                option.onclick = () => {
                                    document.getElementById('teamName').value = team.name;
                                    document.getElementById('teamId').value = team.team_id;
                                    teamSuggestionsDiv.innerHTML = '';
                                    teamSuggestionsDiv.classList.remove('show');
                                };
                                teamSuggestionsDiv.appendChild(option);
                            });
                        } else {
                            teamSuggestionsDiv.classList.remove('show');
                        }
                    } catch (error) {
                        console.error('Error fetching teams:', error);
                    }
                }, 300);
            });
            
            // Hide suggestions when clicking outside
            document.addEventListener('click', function(e) {
                if (!e.target.closest('.position-relative')) {
                    teamSuggestionsDiv.classList.remove('show');
                }
            });
        }, 100);
    }
});
</script>
